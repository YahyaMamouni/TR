#include <stdio.h>
#include <stdlib.h>

#include "FreeRTOS.h"
#include "task.h"
#include "queue.h"
#include "semphr.h"
#include "timers.h"
#include "event_groups.h"

#include "Libs/HardwareEmu.h"
#include "Libs/ControlPanelClient.h"

/** INFORMATIONS SUR LES PERIPHERIQUES ET COMMANDES
---------------------------------------------------
'V' : Vitesse du moteur (0-50)
'D' : Angle de braquage des roues avant en 1/10° de degré (10 -> 1∞)
'T' : Azimut de la tourelle du télémètre en 1/10°
'R' : Lecture de l'Azimuth de la tourelle en 1/10°
'U' : Distance mesure par le télémètre en 1/100 de mètre (en cm)
'X' : Position absolue X en cm
'Y' : Position absolue Y en cm
'Z' : Position absolue Z en cm
'N' : Numéro de la voiture (en fonction de l'ordre de connection)
'E' : Lecture des evènements (cf Annexe 2)
'H' : Donne le temps de course actuel
'S' : Temps du tour précédent
'M' : Mode de course :
    8 bits de poids fort: 1 Attente, 2 course, 3 essais libres)
    8 bits de poids faible : numero de piste
'C' : Informations sur le dernier capteur touché :
    8 bits de poids faible : numéro du capteur
    8 bits de poids fort : couleur ('R','J' ou 'V')
'J' : Proposition d'un code de dévérouillage.
    Une valeur de 0 à 5 par quartet.
'j' : Récupération du résultat de dernier code envoyé.
    0x77 si aucun code n'a été soumis.
    <0 si la réponse n'est pas disponible.
    0x0a0b avec a-> nombre de couleurs bien placées et b -> couleurs présentes mais mal placées.
'I' : Définition du nom du véhicule.
    Doit débuter par le caractère '#' et entraine le chargement de la configuration de piste correspondant au nom du véhicule si le nom se termine par '*'
'K' : Téléportation de la voiture sur le troncon de piste N (correspondant au capteur vert numero N).
    Attention à n'utiliser que pour des tests, les scores sont invalidés !


Contenu du Capteur de couleur;
Bit 0 : Point de passage Vert, remis à zéro lors de la lecture du périphérique 'C'
    1 : Point de passage Jaune, remis à zéro lors de la lecture du périphérique 'C'
    2 : Point de passage Rouge, remis à zéro lors de la lecture du périphérique 'C'
    3 : Point de passage Bleu, remis à zéro lors de la lecture du périphérique 'C'
    4 : Point de passage Cyan, remis à zéro lors de la lecture du périphérique 'C'
    5 : non utilisés
    6 : Collision avec le sol, Remise à zéro au changement de piste.
    7 : Point de passage course (vert), remis à zéro lors de la lecture du périphérique 'C'
    8 : La piste à changé , remis à zéro lors de la lecture du périphérique 'M'
    9 : Le mode de course a changé , remis à zéro lors de la lecture du périphérique 'M'
   10 : non utilisé
   11 : Le dernier point de passage est atteint la course est finie , remis à zéro au changement du mode de course.
   12 : La voiture est sortie de la piste.
   13 : Utilisation de la fonction de téléportation. Classement Invalidé. Remis à zero au changement de piste ou du mode de course.
   14 : Faux départ -> destruction de la voiture , remise à zéro au changement du mode de course.
   15 : Le Feu est Vert
**/

void task_1(void * queue){
int i;
char nom[]="#VROUM*";
CanFrame cmd={{'I',0,0}};

	for(i=0;i<8 && nom[i];i++){
		cmd.data.val=nom[i];
        CanTxSendFrame(cmd);
		vTaskDelay(10);
	}

    while(1){

            char tmp[32];
            sprintf(tmp,"ad00:%d ",ad00);
            lcd_com(0x80);
            lcd_str(tmp);
            vTaskDelay(100);
    }

}

void timer1(void *p){
    static int j=0;
    j=(j)?0:1;
    led_j(j);

}

int main()
{
    HardwareInit(8);
    ControlPanelInit(7);
    //ControlPanelInitAddr("192.168.1.221",7);

    TaskHandle_t htask_1;
    TimerHandle_t htimer1;

    printf("Demarrage des taches\n");
    xTaskCreate(task_1,"Tache 1",configMINIMAL_STACK_SIZE,NULL,6,&htask_1);
    htimer1=xTimerCreate("Timer 1",250,pdTRUE,NULL,timer1);
    xTimerStart(htimer1,0);
    vTaskStartScheduler();
    HardwareHalt();
    return 0;
}
